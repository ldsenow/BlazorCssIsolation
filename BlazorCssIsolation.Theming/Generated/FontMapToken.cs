//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.8.0.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace BlazorCssIsolation.Theming.Tokens
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial record FontMapToken
    {
        [System.Text.Json.Serialization.JsonConstructor]

        public FontMapToken(double @fontSize, double @fontSizeHeading1, double @fontSizeHeading2, double @fontSizeHeading3, double @fontSizeHeading4, double @fontSizeHeading5, double @fontSizeLG, double @fontSizeSM, double @fontSizeXL, double @lineHeight, double @lineHeightHeading1, double @lineHeightHeading2, double @lineHeightHeading3, double @lineHeightHeading4, double @lineHeightHeading5, double @lineHeightLG, double @lineHeightSM)


        {

            this.FontSizeSM = @fontSizeSM;

            this.FontSize = @fontSize;

            this.FontSizeLG = @fontSizeLG;

            this.FontSizeXL = @fontSizeXL;

            this.FontSizeHeading1 = @fontSizeHeading1;

            this.FontSizeHeading2 = @fontSizeHeading2;

            this.FontSizeHeading3 = @fontSizeHeading3;

            this.FontSizeHeading4 = @fontSizeHeading4;

            this.FontSizeHeading5 = @fontSizeHeading5;

            this.LineHeight = @lineHeight;

            this.LineHeightLG = @lineHeightLG;

            this.LineHeightSM = @lineHeightSM;

            this.LineHeightHeading1 = @lineHeightHeading1;

            this.LineHeightHeading2 = @lineHeightHeading2;

            this.LineHeightHeading3 = @lineHeightHeading3;

            this.LineHeightHeading4 = @lineHeightHeading4;

            this.LineHeightHeading5 = @lineHeightHeading5;

        }
        [System.Text.Json.Serialization.JsonPropertyName("fontSizeSM")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double FontSizeSM { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("fontSize")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double FontSize { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("fontSizeLG")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double FontSizeLG { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("fontSizeXL")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double FontSizeXL { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("fontSizeHeading1")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double FontSizeHeading1 { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("fontSizeHeading2")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double FontSizeHeading2 { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("fontSizeHeading3")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double FontSizeHeading3 { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("fontSizeHeading4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double FontSizeHeading4 { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("fontSizeHeading5")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double FontSizeHeading5 { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("lineHeight")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double LineHeight { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("lineHeightLG")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double LineHeightLG { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("lineHeightSM")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double LineHeightSM { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("lineHeightHeading1")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double LineHeightHeading1 { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("lineHeightHeading2")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double LineHeightHeading2 { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("lineHeightHeading3")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double LineHeightHeading3 { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("lineHeightHeading4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double LineHeightHeading4 { get; init; }


        [System.Text.Json.Serialization.JsonPropertyName("lineHeightHeading5")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]   
        public double LineHeightHeading5 { get; init; }


        public string ToJson()
        {

            var options = new System.Text.Json.JsonSerializerOptions();

            return System.Text.Json.JsonSerializer.Serialize(this, options);

        }
        public static FontMapToken FromJson(string data)
        {

            var options = new System.Text.Json.JsonSerializerOptions();

            return System.Text.Json.JsonSerializer.Deserialize<FontMapToken>(data, options);

        }

    }
}